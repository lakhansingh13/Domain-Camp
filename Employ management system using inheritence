#include <iostream>
#include <string>
using namespace std;

class Employee {
protected:
    string name;
    int id;
    double salary;

public:
    void setDetails(const string &name, int id, double salary) {
        this->name = name;
        this->id = id;
        this->salary = salary;
    }

    virtual double calculateEarnings() = 0;

    void displayDetails() {
        cout << "Name: " << name << endl;
        cout << "ID: " << id << endl;
        cout << "Base Salary: " << salary << endl;
    }
};

class Manager : public Employee {
private:
    double bonus;

public:
    void setBonus(double rating) {
        if (rating >= 4.5) {
            bonus = 0.2 * salary;
        } else if (rating >= 3.5) {
            bonus = 0.1 * salary;
        } else {
            bonus = 0;
        }
    }

    double calculateEarnings() override {
        return salary + bonus;
    }
};

class Developer : public Employee {
private:
    double overtimeCompensation;

public:
    void setOvertime(double hoursWorked, double rate) {
        overtimeCompensation = hoursWorked * rate;
    }

    double calculateEarnings() override {
        return salary + overtimeCompensation;
    }
};

int main() {
    Manager m;
    Developer d;
    string name;
    int id;
    double salary;

    cout << "Enter Manager Details:\n";
    cout << "Name: ";
    cin >> name;
    cout << "ID: ";
    cin >> id;
    cout << "Salary: ";
    cin >> salary;
    m.setDetails(name, id, salary);

    double rating;
    cout << "Performance Rating: ";
    cin >> rating;
    m.setBonus(rating);

    cout << "\nEnter Developer Details:\n";
    cout << "Name: ";
    cin >> name;
    cout << "ID: ";
    cin >> id;
    cout << "Salary: ";
    cin >> salary;
    d.setDetails(name, id, salary);

    double hoursWorked, rate;
    cout << "Overtime Hours: ";
    cin >> hoursWorked;
    cout << "Overtime Rate: ";
    cin >> rate;
    d.setOvertime(hoursWorked, rate);

    cout << "\nManager Details:\n";
    m.displayDetails();
    cout << "Total Earnings: " << m.calculateEarnings() << endl;

    cout << "\nDeveloper Details:\n";
    d.displayDetails();
    cout << "Total Earnings: " << d.calculateEarnings() << endl;

    return 0;
}

