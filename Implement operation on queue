#include <iostream>
#include <stack>

class MyQueue {
private:
    std::stack<int> stack1;
    std::stack<int> stack2;

public:
    MyQueue() {}

    void push(int x) {
        stack1.push(x);
    }

    int pop() {
        if (stack2.empty()) {
            while (!stack1.empty()) {
                stack2.push(stack1.top());
                stack1.pop();
            }
        }
        int front = stack2.top();
        stack2.pop();
        return front;
    }

    int peek() {
        if (stack2.empty()) {
            while (!stack1.empty()) {
                stack2.push(stack1.top());
                stack1.pop();
            }
        }
        return stack2.top();
    }

    bool empty() {
        return stack1.empty() && stack2.empty();
    }

    bool full() {
        int maxSize = 100;
        return (stack1.size() + stack2.size()) >= maxSize;
    }
};

int main() {
    MyQueue q;
    
    q.push(1);
    q.push(2);
    q.push(3);
    
    std::cout << "Front of the queue: " << q.peek() << std::endl;
    std::cout << "Popped from the queue: " << q.pop() << std::endl;
    std::cout << "Is the queue empty? " << (q.empty() ? "Yes" : "No") << std::endl;

    return 0;
}
